
  Project Brief: Triveda - A Modern Ayurvedic Diet Management Platform
  Develop a fully functional, high-fidelity frontend prototype for "Triveda," a web application for Ayurvedic diet management. This is envisioned as a modern tool for the Ministry of
  Ayush, so it must be professional and trustworthy, yet engaging and user-friendly.

  This is a frontend-only project. All data persistence and state management must be handled using the browser's local storage. There will be no backend or database calls.

  ## ðŸ“œ Project Context & Vision


  Triveda (also referred to as Innoveda) is a platform designed to help Ayurvedic practitioners create, manage, and monitor personalized diet plans for their patients. It bridges
  traditional Ayurvedic wisdom with modern nutritional science to solve the problems of manual inefficiency and poor patient compliance.


   - Core Users: Patients, Doctors, and Hospital/Clinic Admins.
  The UI should feel official and credible, suitable for a government-affiliated project, but avoid being "boring." It needs to be clean, modern, and intuitive, with smooth transitions and
  a polished feel.


   - Theme: Light theme only.
   - Framework: Use a modern frontend framework like React, Vue, or Svelte.
   1. Landing Page: A beautiful landing page showcasing the app's features with login buttons for each role and a registration button for patients.
  Goal: Follow the diet plan, log meals, and track progress.


   - Registration:
   - Login: Doctors use the main login page.
   - Login: Admins use the main login page.
  ðŸ“¦ Data Schemas & Management (Local Storage)
  User Schema (`users` key in local storage)
  `json
  [
    {
      "userId": "user-001",
      "role": "patient",
      "email": "patient1@test.com",
      "password": "password123",
      "profile": {
        "name": "Rohan Sharma",
        "age": 34,
        "gender": "male",
        "weight_kg": 78,
        "height_cm": 175,
        "bmi": 25.4,
        "prakriti_predicted": "pitta",
        "health_goals": ["weight_loss", "digestion"],
        "allergies": ["peanuts"]
      }
    },
    {
      "userId": "doc-001",
      "role": "doctor",
      "email": "doctor1@test.com",
      "password": "password123",
      "profile": {
        "name": "Dr. Anjali Verma"
      }
    },
    {
      "userId": "admin-001",
      "role": "admin",
      "email": "admin@test.com",
      "password": "password123",
      "profile": {
        "name": "Clinic Admin"
      }
    }
  ]
  `

  ### Diet Chart Schema (`diet_charts` key)


  `json
  [
    {
      "chartId": "chart-001",
      "patientId": "user-001",
      "doctorId": "doc-001",
      "status": "active", // 'draft' or 'active'
      "createdAt": "2023-10-27T10:00:00Z",
      "meals": {
        "breakfast": { "time": "8:00 AM", "items": ["Poha (1 bowl)", "Herbal Tea (1 cup)"], "rationale": "Light and easy to digest." },
        "lunch": { "time": "1:00 PM", "items": ["Roti (2)", "Dal (1 bowl)", "Seasonal Sabzi (1 bowl)"], "rationale": "Balanced meal for sustained energy." },
        "dinner": { "time": "7:00 PM", "items": ["Khichdi (1 bowl)", "Ghee (1 tsp)"], "rationale": "Nourishing and easy on the digestive system before sleep." }
      }
    }
  ]
  `


  Meal Log Schema (`meal_logs` key)
  `json
  [
    {
      "logId": "log-001",
      "patientId": "user-001",
      "date": "2023-10-27",
      "mealType": "breakfast",
      "status": "on_plan", // 'on_plan' or 'off_plan'
      "notes": ""
    }
  ]
  `

  ## ðŸš€ Final Deliverable


  A link to a live, interactive web prototype (e.g., on Netlify, Vercel, or GitHub Pages) or a zip file containing the complete frontend codebase that can be run locally. The prototype
  must fulfill all the functional and UI/UX requirements outlined above, providing a seamless and polished user experience across all three roles.